#:kivy 1.8.0

DarkBunnyGame:

<DarkBunnyGame>:
	gameworld: gameworld
	pos: root.pos
	size: root.size
	canvas:
		Color:
			rgb: (0., 0., 0.)
		Rectangle:
			size: self.size
			pos: self.pos
	GameWorld:
		id: gameworld
		gamescreenmanager: gamescreenmanager
		hawk_ai_system: hawk_ai_system
		boundary_system: boundary_system
		environment_system: environment_system
		music_controller: music_controller
		GameView:
			id: game_view
			focus_entity: False
			entity_to_focus: rabbit_system.rabbit
			gameworld: root.gameworld
			pos: root.pos
			size: root.size
		GameMap:
			system_id: 'map'
			camera_pos: game_view.camera_pos
			map_size: (1000, 700)
			default_margins: (100., 100.)
			gameworld: root.gameworld
			size: root.size
			canvas:
				Color:
					rgba: self.map_color
				Rectangle:
					pos: self.camera_pos
					size: self.map_size
		MusicController:
			volume: app.music_level
            id: music_controller
        QuadTreePointRenderer:
			system_id: 'quadtree_renderer'
			render_information_from: 'position'
			gameworld: root.gameworld
			do_color: True
			context_information_from: 'environment_system'
		CymunkPhysics:
			gameworld: root.gameworld
			damping: .75
		PhysicsRenderer:
			gameworld: root.gameworld
			system_id: 'shadow_renderer'
			do_color: True
			context_information_from: 'environment_system'
		PhysicsRenderer:
			gameworld: root.gameworld
			system_id: 'physics_renderer2'
			do_color: True
			context_information_from: 'environment_system'
		PhysicsRenderer:
			gameworld: root.gameworld
			do_color: True
			context_information_from: 'environment_system'
		GameSystem:
			system_id: 'position'
			gameworld: root.gameworld
	    BoundarySystem:
	        id: boundary_system
	        system_id: 'boundary_system'
	        gameworld: root.gameworld
	        size: root.size
		PhysicsRenderer:
			gameworld: root.gameworld
			system_id: 'tree_physics_renderer'
			do_color: True
			context_information_from: 'environment_system'
		PhysicsRenderer:
	        gameworld: root.gameworld
	        system_id: 'hawk_physics_renderer'
	        do_color: True
			context_information_from: 'environment_system'
	    HawkAISystem:
	        id: hawk_ai_system
			system_id: 'hawk_ai_system'
			gameworld: root.gameworld
			update_time: 1./30.
		RabbitSystem:
			id: rabbit_system
			gameworld: root.gameworld
			updateable: True
			update_time: 1./30.
		EnvironmentSystem:
		    id: environment_system
		    gameworld: root.gameworld
		AnimationSystem:
			gameworld: root.gameworld
			updateable: True
		LevelsSystem:
		    gameworld: root.gameworld
	    SoundSystem:
	    	volume: app.sound_level
	        system_id: 'sound_system'
	        gameworld: root.gameworld
		GameScreenManager:
			id: gamescreenmanager
			size: root.size
			pos: root.pos
			gameworld: root.gameworld

<GameScreenManager>:
	gameworld: root.gameworld
	main_screen: main_screen
	MainMenuScreen:
		id: menu_screen
	MainScreen:
		id: main_screen
	MainScreen2:
		id: main_Screen_editor
	EditorScreen:
		id: editor_screen
		gameworld: root.gameworld
	SettingsScreen:
		id: setting_screen
	GameOverScreen:
		id: gameover
	PauseScreen:
		id: pause
	CreditScreen:
		id: credits
	
<MainScreen>:
	name: 'main'
	layout: layout
	FloatLayout:	
		size: root.size
		pos: root.pos
		id: layout
		BoxLayout:
			size_hint: (.2, .1)
			pos: (0., 0.)
			orientation: 'vertical'
			DebugPanel:
			CamouflopButton2:
				text: 'Pause Game'
				on_press: app.root.pause_game()

<MainScreen2@MainScreen>:
	name: 'main_editor'
	layout: layout
	FloatLayout:	
		size: root.size
		pos: root.pos
		id: layout
		BoxLayout:
			size_hint: (.2, .1)
			pos: (0., 0.)
			orientation: 'vertical'
			DebugPanel:
			CamouflopButton2:
				text: 'Return to Editor'
				on_press: app.root.open_editor()

<VisibilityBar>:
	canvas:
		Color:
			rgba: (0., 1., 0., .75)
		Rectangle:
			size: self.size
			pos: self.pos
		Color:
			rgba: (1., 0., 0., .75)
		Rectangle:
			size: self.size[0]*(self.current_visibility/self.max_visibility), self.size[1]
			pos: self.pos
		Color:
			rgba: (1., 1., 1., 1.)

<Timer>:
	label: label
	size_hint: (1., 1.)
	Label:
		id: label
		pos: root.pos
		size: root.size
		text: 'Next Level Starts In: ' + str(root.timer_count)
		color: (0.,0.,0.,1.)

<PauseScreen@GameScreen>:
	name: 'pause'
	BoxLayout:
		size_hint: (.6, .6)
		pos_hint: {'x': .2, 'y': .2}
		CamouflopButton:
			text: 'Resume Game'
			on_press: app.root.start_game()

<CreditScreen@GameScreen>:
	name: 'credits'
	BoxLayout:
		size_hint: (.6, .8)
		pos_hint: {'x': .2, 'y': .1}
		orientation: 'vertical'
		CamouflopLabel:
			text: 'David Coleman'
		CamouflopLabel:
			text: 'Isaac Kingston'
		CamouflopLabel:
			text: 'Adair Kovac'
		CamouflopLabel:
			text: 'Jacob Kovac'
		CamouflopLabel:
			text: 'Hector Mojica'
		CamouflopLabel:
			text: 'Akshay Thakre'
		CamouflopButton:
			text: 'Return to Main Menu'
			on_press: app.root.set_state()

<CamouflopLabel@Label>:
	font_name: 'assets/ui_elements/TEMPSITC.TTF'
	font_size: 30
	color: (0., 0., 0., 1.)

<MainMenuScreen@GameScreen>:
	name: 'menu'
	canvas:
		Color:
			rgba: (1., 1., 1., 1.)
		Rectangle:
			size: self.size
			pos: self.pos
	FloatLayout:
		size: root.size
		pos: root.pos
		MainMenu:

<EditorScreen@GameScreen>:
	name: 'editor'
	gameworld: root.gameworld
	FloatLayout:
		size: root.size
		pos: root.pos
		Editor:
			gameworld: root.gameworld

		
<MapSizeChooser>:
	layout: layout
	text_color: (0., 0., 0., 1.)
	BoxLayout:
		orientation: 'vertical'
		size: root.size
		pos: root.pos
		id: layout
		BoxLayout:
			orientation: 'horizontal'
			size_hint: (1., .3)
			Label:
				text: 'Width: ' + str(root.current_map_width)
				color: root.text_color
				size_hint: (.4, 1.)
				on_touch_down: root.add_numpad('width') if self.collide_point(args[1].x, args[1].y) else None
			Label:
				text: ' x '
				color: root.text_color
				size_hint: (.2, 1.)
			Label:
				text: 'Height: ' + str(root.current_map_height)
				color: root.text_color
				size_hint: (.4, 1.)
				on_touch_down: root.add_numpad('height') if self.collide_point(args[1].x, args[1].y) else None
				


<Editor>:
	root_layout: root_layout
	FloatLayout:
		id: root_layout
		size: root.size
		pos: root.pos
		BoxLayout:
			size_hint: (.25, .5)
			padding: 5
			spacing: 5
			orientation: 'vertical'
			CamouflopButton:
				text: 'Main Menu'
				on_press: app.root.set_state()
			CamouflopButton:
				text: 'Play Game'
				on_press: app.root.start_game_editor()
			CamouflopButton:
				text: 'Clouds'
				on_press: root.open_entity_list('place_clouds')
			CamouflopButton:
				text: 'Trees'
				on_press: root.open_entity_list('place_tree')
			CamouflopButton:
				text: 'Rocks'
				on_press: root.open_entity_list('place_rock')
			CamouflopButton:
				text: 'Rabbits'
				on_press: root.open_entity_list('place_rabbit')
			CamouflopButton:
				text: 'Holes'
				on_press: root.open_entity_list('place_hole')
			CamouflopButton:
				text: 'Delete'
				on_press: root.edit_mode = 'delete'
			CamouflopButton:
				text: 'Move'
				on_press: root.edit_mode = 'move'
			CamouflopButton:
				text: 'Free Look'
				on_press: root.edit_mode = 'freelook'
			CamouflopButton:
				text: 'Map Size'
				on_press: root.open_map_size_picker()

<SliderSetting@Widget>:
	slider_name: self.slider_name
	slider_value: setting_slider.value
	BoxLayout:
		size: root.size
		pos: root.pos
		orientation: 'horizontal'
		Label:
			size_hint: (.5, 1.0)
			font_name: 'assets/ui_elements/TEMPSITC.TTF'
			font_size: 30
			text: root.slider_name
			color: (0., 0., 0., 1.)
		Slider:
			size_hint: (.5, 1.0)
			id: setting_slider
			min: 0.
			max: 1.
			step: .01
			value: .5
			canvas.before:
				Color:
					rgba: (0., 0., 0., 1.)
				Rectangle:
					size: self.size[0], self.size[1]*.1
					pos: self.pos[0], self.pos[1] + self.size[1]*.45

<SettingsScreen@GameScreen>:
	name: 'settings'
	BoxLayout:
		size_hint: (.6, .8)
		pos_hint: {'x': .2, 'y': .1}
		orientation: 'vertical'
		SliderSetting:
			slider_name: 'Music Volume'
			on_slider_value: app.music_level = self.slider_value
		SliderSetting:
			slider_name: 'Sound Volume'
			on_slider_value: app.sound_level = self.slider_value
		BoxLayout:
			orientation: 'horizontal'
			CamouflopButton:
				text: 'Return to Main Menu'
				on_press: app.root.set_state()

<GameOverScreen@GameScreen>:
	name: 'gameover'
	BoxLayout:
		size_hint: (.6, .6)
		pos_hint: {'x': .2, 'y': .2}
		CamouflopButton:
			text: 'Return to Main Menu'
			on_press: app.root.set_state()


<-CamouflopButton@Button>:
	font_name: 'assets/ui_elements/TEMPSITC.TTF'
	font_size: 40
	canvas:
		Color:
			rgba: (1., 1. ,1., 1.) if root.state == 'normal' else (0., 0., 0., 1.)
		Rectangle:
			size: root.size
			pos: root.pos
		Color:
			rgba: (0., 0., 0., 1.) if root.state == 'normal' else (1., 1., 1., 1.)
		Line:
			rectangle: (self.pos[0], self.pos[1], self.size[0], self.size[1])
			width: 2.0

	Label:
		text: root.text
		font_size: root.font_size
		font_name: root.font_name
		color: (0., 0., 0., 1.) if root.state == 'normal' else (1., 1., 1., 1.)
		size: root.size
		pos: root.pos

<-CamouflopButton2@Button>:
	font_name: 'assets/ui_elements/TEMPSITC.TTF'
	font_size: 20
	canvas:
		Color:
			rgba: (1., 1. ,1., 1.) if root.state == 'normal' else (0., 0., 0., 1.)
		Rectangle:
			size: root.size
			pos: root.pos
		Color:
			rgba: (0., 0., 0., 1.) if root.state == 'normal' else (1., 1., 1., 1.)
		Line:
			rectangle: (self.pos[0], self.pos[1], self.size[0], self.size[1])
			width: 2.0

	Label:
		text: root.text
		font_size: root.font_size
		font_name: root.font_name
		color: (0., 0., 0., 1.) if root.state == 'normal' else (1., 1., 1., 1.)
		size: root.size
		pos: root.pos


<MainMenu@Widget>:
	title_image: title_image
	BoxLayout:
		size: root.size
		pos: root.pos
		orientation: 'vertical'
		Image:
			id: title_image
			source: 'assets/ui_elements/CamouflopLogo.png'
		BoxLayout:
			orientation: 'vertical'
			Widget:
				size_hint: (1., .05)
			BoxLayout:
				size_hint: (1., .25)
				padding: 10
				spacing: 10
				CamouflopButton:
					text: 'Play Game'
					on_press: app.root.start_game(), app.root.generate_level()
				CamouflopButton:
					text: 'Settings'
					on_press: app.root.open_settings()
				CamouflopButton:
					text: 'Level Editor'
					on_press: app.root.open_editor()
				CamouflopButton:
					text: 'Credits'
					on_press: app.root.open_credits()
			Widget:
				size_hint: (1., .7)



<DebugPanel>:
    Label:
        pos: root.pos
        size: root.size
        halign: 'center'
        valign: 'middle'
        color: (0., 0., 0., 1.)
        text: 'FPS: ' + root.fps if root.fps != None else 'FPS:'